// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using abulbarovakt_31_22.Database;

#nullable disable

namespace abulbarovakt_31_22.Migrations
{
    [DbContext(typeof(TeacherDbContext))]
    [Migration("20250523201709_CreateDatabase4")]
    partial class CreateDatabase4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("abulbarovakt_31_22.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("department_id")
                        .HasComment("Идентификатор записи кафедры");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("c_department_name")
                        .HasComment("Название кафедры");

                    b.Property<int?>("TeacherHeaderId")
                        .HasColumnType("integer");

                    b.HasKey("DepartmentId")
                        .HasName("pk_cd_departament_department_id");

                    b.HasIndex("TeacherHeaderId")
                        .IsUnique();

                    b.ToTable("cd_departament", (string)null);
                });

            modelBuilder.Entity("abulbarovakt_31_22.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("position_id")
                        .HasComment("Идентификатор записи должности");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PositionId"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("c_position_name")
                        .HasComment("Название должности");

                    b.HasKey("PositionId")
                        .HasName("pk_cd_position_position_id");

                    b.ToTable("cd_position", (string)null);
                });

            modelBuilder.Entity("abulbarovakt_31_22.Models.Teacher", b =>
                {
                    b.Property<int>("TeachersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("teacher_id")
                        .HasComment("Идентификатор записи студента");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TeachersId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int4")
                        .HasColumnName("f_department_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_firstname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_lastname");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_middlename");

                    b.Property<int>("PositionId")
                        .HasColumnType("int4")
                        .HasColumnName("f_position_id");

                    b.HasKey("TeachersId")
                        .HasName("pk_cd_teacher_teacher_id");

                    b.HasIndex(new[] { "PositionId" }, "idx_cd_teacher_fk_c_position_id");

                    b.HasIndex(new[] { "DepartmentId" }, "idx_cd_teacher_fk_f_department_id");

                    b.ToTable("cd_teacher", (string)null);
                });

            modelBuilder.Entity("abulbarovakt_31_22.Models.Department", b =>
                {
                    b.HasOne("abulbarovakt_31_22.Models.Teacher", "Teacher")
                        .WithOne()
                        .HasForeignKey("abulbarovakt_31_22.Models.Department", "TeacherHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("abulbarovakt_31_22.Models.Teacher", b =>
                {
                    b.HasOne("abulbarovakt_31_22.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_department_id");

                    b.HasOne("abulbarovakt_31_22.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_position_id");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
